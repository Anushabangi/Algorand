//Psuedo code of sortition

sortition(sk, seed, threshold, role, w, W) {
	<hash, proof> = VRF(sk, seed, role);
	p = threshold / W;
	j = 0;
	while(hash / 2^hashlen < sum(0, j, B(k,w,p)) || hash / 2^hashlen >= sum(0, j+1, B(k, w, p))) {
		j++;
	}
	return <hash, proof, j>;
}

sum(start, end, k, w, p) {
	int sum = 0;
	for(int i = start; i <= end; i++) {
		sum += B(i, w, p);
	}
	return sum;
}

int nCr(int n, int r) 
{ 
    if (r > n / 2) 
        r = n - r; 
  
    int answer = 1; 
    for (int i = 1; i <= r; i++) { 
        answer *= (n - r + i); 
        answer /= i; 
    } 
  
    return answer; 
} 
B(k, n, p) {
	return nCr(n, k) * pow(p, k) * pow(1 - p, n - k); 	
}
